syntax = "proto3";

package vortech.stream_management.management;

import "buf/validate/validate.proto";
import "google/protobuf/timestamp.proto";

option go_package = "api/v1/management;management";

// For internal, service to service
service Management {
  rpc GetPlaybackUrl(GetPlaybackUrlRequest) returns (GetPlaybackUrlResponse);

  // TODO only implementation when OME allow to terminate stream session
  rpc ExtendStreamToken(ExtendStreamTokenRequest) returns (ExtendStreamTokenResponse);
  rpc RevokeStreamToken(RevokeStreamTokenRequest) returns (RevokeStreamTokenResponse);
}

message GetPlaybackUrlRequest {
  string table_id = 1 [(buf.validate.field).string = {min_len: 1}];
  // TODO could remove if OME not allow to terminate stream session
  string service_id = 2 [(buf.validate.field).string = {min_len: 1}];
  string user_id = 3 [(buf.validate.field).string = {min_len: 1}];
  // TODO consider using expires_at or ttl (expires_in, expiry_duration)
  // if nil then using default config (now + ttl)
  optional google.protobuf.Timestamp expires_at = 4;

  // signature: SHA256, combine `timestamp|table_id|service_id|user_id`
  Authorization authorization = 11 [(buf.validate.field).required = true];
}

message GetPlaybackUrlResponse {
  string url = 1; // included stream_token parameter
  string stream_token = 2;
//  google.protobuf.Timestamp expires_at = 3;
}

message ExtendStreamTokenRequest {
  // TODO consider to using [table_id, service_id, user_id] instead of stream_token
  string stream_token = 1;
  // if nil then using default config (current_expires_at + ttl)
  optional google.protobuf.Timestamp expires_at = 2;
}

message ExtendStreamTokenResponse {
  string stream_token = 1;
  google.protobuf.Timestamp expires_at = 2;
}

message RevokeStreamTokenRequest {
  // TODO consider to using [table_id, service_id, user_id] instead of stream_token
  string stream_token = 1;
}

message RevokeStreamTokenResponse {
  string stream_token = 1;
}

message Authorization {
  // generate HMAC-SHA256 (using secret key)
  string signature = 1 [(buf.validate.field).string.min_len = 1];
  // request time, validate within 5 mins, in millisecond
  int64 timestamp = 2;
}

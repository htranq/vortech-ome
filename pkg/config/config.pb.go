// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: config.proto

package config

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Logger_Level int32

const (
	Logger_UNSPECIFIED Logger_Level = 0
	Logger_DEBUG       Logger_Level = 1
	Logger_INFO        Logger_Level = 2
	Logger_WARN        Logger_Level = 3
	Logger_ERROR       Logger_Level = 4
	Logger_PANIC       Logger_Level = 5
	Logger_FATAL       Logger_Level = 6
)

// Enum value maps for Logger_Level.
var (
	Logger_Level_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "DEBUG",
		2: "INFO",
		3: "WARN",
		4: "ERROR",
		5: "PANIC",
		6: "FATAL",
	}
	Logger_Level_value = map[string]int32{
		"UNSPECIFIED": 0,
		"DEBUG":       1,
		"INFO":        2,
		"WARN":        3,
		"ERROR":       4,
		"PANIC":       5,
		"FATAL":       6,
	}
)

func (x Logger_Level) Enum() *Logger_Level {
	p := new(Logger_Level)
	*p = x
	return p
}

func (x Logger_Level) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Logger_Level) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[0].Descriptor()
}

func (Logger_Level) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[0]
}

func (x Logger_Level) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Logger_Level.Descriptor instead.
func (Logger_Level) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{4, 0}
}

type Config struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GrpcListener  *Listener              `protobuf:"bytes,1,opt,name=grpc_listener,json=grpcListener,proto3" json:"grpc_listener,omitempty"`
	HttpListener  *Listener              `protobuf:"bytes,2,opt,name=http_listener,json=httpListener,proto3" json:"http_listener,omitempty"`
	Logger        *Logger                `protobuf:"bytes,3,opt,name=logger,proto3" json:"logger,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Config) Reset() {
	*x = Config{}
	mi := &file_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetGrpcListener() *Listener {
	if x != nil {
		return x.GrpcListener
	}
	return nil
}

func (x *Config) GetHttpListener() *Listener {
	if x != nil {
		return x.HttpListener
	}
	return nil
}

func (x *Config) GetLogger() *Logger {
	if x != nil {
		return x.Logger
	}
	return nil
}

type TCPSocket struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Port          uint32                 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Secure        bool                   `protobuf:"varint,3,opt,name=secure,proto3" json:"secure,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TCPSocket) Reset() {
	*x = TCPSocket{}
	mi := &file_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TCPSocket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCPSocket) ProtoMessage() {}

func (x *TCPSocket) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCPSocket.ProtoReflect.Descriptor instead.
func (*TCPSocket) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{1}
}

func (x *TCPSocket) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *TCPSocket) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *TCPSocket) GetSecure() bool {
	if x != nil {
		return x.Secure
	}
	return false
}

type UnixSocket struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnixSocket) Reset() {
	*x = UnixSocket{}
	mi := &file_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnixSocket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnixSocket) ProtoMessage() {}

func (x *UnixSocket) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnixSocket.ProtoReflect.Descriptor instead.
func (*UnixSocket) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{2}
}

func (x *UnixSocket) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type Listener struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Socket:
	//
	//	*Listener_Tcp
	//	*Listener_Unix
	Socket        isListener_Socket `protobuf_oneof:"socket"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Listener) Reset() {
	*x = Listener{}
	mi := &file_config_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Listener) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Listener) ProtoMessage() {}

func (x *Listener) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Listener.ProtoReflect.Descriptor instead.
func (*Listener) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{3}
}

func (x *Listener) GetSocket() isListener_Socket {
	if x != nil {
		return x.Socket
	}
	return nil
}

func (x *Listener) GetTcp() *TCPSocket {
	if x != nil {
		if x, ok := x.Socket.(*Listener_Tcp); ok {
			return x.Tcp
		}
	}
	return nil
}

func (x *Listener) GetUnix() *UnixSocket {
	if x != nil {
		if x, ok := x.Socket.(*Listener_Unix); ok {
			return x.Unix
		}
	}
	return nil
}

type isListener_Socket interface {
	isListener_Socket()
}

type Listener_Tcp struct {
	Tcp *TCPSocket `protobuf:"bytes,1,opt,name=tcp,proto3,oneof"`
}

type Listener_Unix struct {
	Unix *UnixSocket `protobuf:"bytes,2,opt,name=unix,proto3,oneof"`
}

func (*Listener_Tcp) isListener_Socket() {}

func (*Listener_Unix) isListener_Socket() {}

type Logger struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Level         Logger_Level           `protobuf:"varint,1,opt,name=level,proto3,enum=vortech.stream_management.config.Logger_Level" json:"level,omitempty"`
	Pretty        bool                   `protobuf:"varint,2,opt,name=pretty,proto3" json:"pretty,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Logger) Reset() {
	*x = Logger{}
	mi := &file_config_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Logger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Logger) ProtoMessage() {}

func (x *Logger) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Logger.ProtoReflect.Descriptor instead.
func (*Logger) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{4}
}

func (x *Logger) GetLevel() Logger_Level {
	if x != nil {
		return x.Level
	}
	return Logger_UNSPECIFIED
}

func (x *Logger) GetPretty() bool {
	if x != nil {
		return x.Pretty
	}
	return false
}

type Token struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enabled       bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Token) Reset() {
	*x = Token{}
	mi := &file_config_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{5}
}

func (x *Token) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

var File_config_proto protoreflect.FileDescriptor

const file_config_proto_rawDesc = "" +
	"\n" +
	"\fconfig.proto\x12 vortech.stream_management.config\x1a\x1bbuf/validate/validate.proto\"\x84\x02\n" +
	"\x06Config\x12W\n" +
	"\rgrpc_listener\x18\x01 \x01(\v2*.vortech.stream_management.config.ListenerB\x06\xbaH\x03\xc8\x01\x01R\fgrpcListener\x12W\n" +
	"\rhttp_listener\x18\x02 \x01(\v2*.vortech.stream_management.config.ListenerB\x06\xbaH\x03\xc8\x01\x01R\fhttpListener\x12H\n" +
	"\x06logger\x18\x03 \x01(\v2(.vortech.stream_management.config.LoggerB\x06\xbaH\x03\xc8\x01\x01R\x06logger\"Q\n" +
	"\tTCPSocket\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x12\n" +
	"\x04port\x18\x02 \x01(\rR\x04port\x12\x16\n" +
	"\x06secure\x18\x03 \x01(\bR\x06secure\" \n" +
	"\n" +
	"UnixSocket\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\"\xa0\x01\n" +
	"\bListener\x12?\n" +
	"\x03tcp\x18\x01 \x01(\v2+.vortech.stream_management.config.TCPSocketH\x00R\x03tcp\x12B\n" +
	"\x04unix\x18\x02 \x01(\v2,.vortech.stream_management.config.UnixSocketH\x00R\x04unixB\x0f\n" +
	"\x06socket\x12\x05\xbaH\x02\b\x01\"\xc0\x01\n" +
	"\x06Logger\x12D\n" +
	"\x05level\x18\x01 \x01(\x0e2..vortech.stream_management.config.Logger.LevelR\x05level\x12\x16\n" +
	"\x06pretty\x18\x02 \x01(\bR\x06pretty\"X\n" +
	"\x05Level\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\t\n" +
	"\x05DEBUG\x10\x01\x12\b\n" +
	"\x04INFO\x10\x02\x12\b\n" +
	"\x04WARN\x10\x03\x12\t\n" +
	"\x05ERROR\x10\x04\x12\t\n" +
	"\x05PANIC\x10\x05\x12\t\n" +
	"\x05FATAL\x10\x06\"!\n" +
	"\x05Token\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabledB\xe4\x01\n" +
	"$com.vortech.stream_management.configB\vConfigProtoP\x01Z\x11pkg/config;config\xa2\x02\x03VSC\xaa\x02\x1fVortech.StreamManagement.Config\xca\x02\x1fVortech\\StreamManagement\\Config\xe2\x02+Vortech\\StreamManagement\\Config\\GPBMetadata\xea\x02!Vortech::StreamManagement::Configb\x06proto3"

var (
	file_config_proto_rawDescOnce sync.Once
	file_config_proto_rawDescData []byte
)

func file_config_proto_rawDescGZIP() []byte {
	file_config_proto_rawDescOnce.Do(func() {
		file_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_config_proto_rawDesc), len(file_config_proto_rawDesc)))
	})
	return file_config_proto_rawDescData
}

var file_config_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_config_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_config_proto_goTypes = []any{
	(Logger_Level)(0),  // 0: vortech.stream_management.config.Logger.Level
	(*Config)(nil),     // 1: vortech.stream_management.config.Config
	(*TCPSocket)(nil),  // 2: vortech.stream_management.config.TCPSocket
	(*UnixSocket)(nil), // 3: vortech.stream_management.config.UnixSocket
	(*Listener)(nil),   // 4: vortech.stream_management.config.Listener
	(*Logger)(nil),     // 5: vortech.stream_management.config.Logger
	(*Token)(nil),      // 6: vortech.stream_management.config.Token
}
var file_config_proto_depIdxs = []int32{
	4, // 0: vortech.stream_management.config.Config.grpc_listener:type_name -> vortech.stream_management.config.Listener
	4, // 1: vortech.stream_management.config.Config.http_listener:type_name -> vortech.stream_management.config.Listener
	5, // 2: vortech.stream_management.config.Config.logger:type_name -> vortech.stream_management.config.Logger
	2, // 3: vortech.stream_management.config.Listener.tcp:type_name -> vortech.stream_management.config.TCPSocket
	3, // 4: vortech.stream_management.config.Listener.unix:type_name -> vortech.stream_management.config.UnixSocket
	0, // 5: vortech.stream_management.config.Logger.level:type_name -> vortech.stream_management.config.Logger.Level
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_config_proto_init() }
func file_config_proto_init() {
	if File_config_proto != nil {
		return
	}
	file_config_proto_msgTypes[3].OneofWrappers = []any{
		(*Listener_Tcp)(nil),
		(*Listener_Unix)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_config_proto_rawDesc), len(file_config_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_proto_goTypes,
		DependencyIndexes: file_config_proto_depIdxs,
		EnumInfos:         file_config_proto_enumTypes,
		MessageInfos:      file_config_proto_msgTypes,
	}.Build()
	File_config_proto = out.File
	file_config_proto_goTypes = nil
	file_config_proto_depIdxs = nil
}

syntax = "proto3";

package vortech.stream_management.webhooks;

import "buf/validate/validate.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

option go_package = "api/v1/webhooks;webhooks";

service Webhooks {
  // Get the current status of the stream management service.
  rpc Admission(AdmissionRequest) returns (AdmissionResponse) {
    option (google.api.http) = {post: "/v1/admission"};
  }
}

message AdmissionRequest {
  ClientInfo client = 1 [(buf.validate.field).required = true];
  RequestInfo request = 2 [(buf.validate.field).required = true];
}

message AdmissionResponse {
  // required: true if request is allowed, false to reject.
  bool allowed = 1;

  // optional: URL to redirect the client (must match scheme, port, file).
  string new_url = 2;

  // optional: Connection lifetime in milliseconds. 0 means infinite.
  uint64 lifetime = 3;

  // optional: Reason for rejection or logging purposes.
  string reason = 4;
}

message ClientInfo {
  // IP address of the client connected to the server
  string address = 1 [(buf.validate.field).string = {
    min_len: 1
    ip: true
  }];

  // Port number of the client
  uint32 port = 2 [(buf.validate.field).uint32.gt = 0];

  // IP address forwarded by the proxy server
  string real_ip = 3 [(buf.validate.field).string = {
    min_len: 1
    ip: true
  }];

  string user_agent = 4; // (Optional) Client's user-agent
}

// TODO RequestInfo: make direction, protocol, status as proto enum
message RequestInfo {
  // direction of the stream: incoming or outgoing
  string direction = 1 [
    (buf.validate.field).string.in = "incoming",
    (buf.validate.field).string.in = "outgoing"
  ];

  // protocol used: webrtc, rtmp, srt, llhls, thumbnail
  string protocol = 2 [
    (buf.validate.field).string.in = "webrtc",
    (buf.validate.field).string.in = "rtmp",
    (buf.validate.field).string.in = "srt",
    (buf.validate.field).string.in = "llhls",
    (buf.validate.field).string.in = "thumbnail"
  ];

  // request status: opening or closing
  string status = 3 [
    (buf.validate.field).string.in = "opening",
    (buf.validate.field).string.in = "closing"
  ];

  // original requested URL
  string url = 4 [(buf.validate.field).string = {
    min_len: 1
    uri: true
  }];

  // (optional) redirected URL (used when closing)
  string new_url = 5;

  // time requested by the client (ISO8601 format)
  // TODO try to using proto Timestamp
  string time = 6;
}
